// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`screen sharing indicator should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScreenSharingIndicator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="drag-area"
        />,
        <span
          className="text-label"
        >
          You are sharing your screen on Symphony
        </span>,
        <span
          className="buttons"
        >
          <a
            className="hide-button"
            href="#"
            onClick={[Function]}
          >
            Hide
          </a>
          <button
            className="stop-sharing-button"
            onClick={[Function]}
          >
            Stop sharing
          </button>
        </span>,
      ],
      "className": "ScreenSharingIndicator mac",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "drag-area",
        },
        "ref": null,
        "rendered": null,
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "You are sharing your screen on Symphony",
          "className": "text-label",
        },
        "ref": null,
        "rendered": "You are sharing your screen on Symphony",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              className="hide-button"
              href="#"
              onClick={[Function]}
            >
              Hide
            </a>,
            <button
              className="stop-sharing-button"
              onClick={[Function]}
            >
              Stop sharing
            </button>,
          ],
          "className": "buttons",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hide",
              "className": "hide-button",
              "href": "#",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Hide",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Stop sharing",
              "className": "stop-sharing-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Stop sharing",
            "type": "button",
          },
        ],
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="drag-area"
          />,
          <span
            className="text-label"
          >
            You are sharing your screen on Symphony
          </span>,
          <span
            className="buttons"
          >
            <a
              className="hide-button"
              href="#"
              onClick={[Function]}
            >
              Hide
            </a>
            <button
              className="stop-sharing-button"
              onClick={[Function]}
            >
              Stop sharing
            </button>
          </span>,
        ],
        "className": "ScreenSharingIndicator mac",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "drag-area",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "You are sharing your screen on Symphony",
            "className": "text-label",
          },
          "ref": null,
          "rendered": "You are sharing your screen on Symphony",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                className="hide-button"
                href="#"
                onClick={[Function]}
              >
                Hide
              </a>,
              <button
                className="stop-sharing-button"
                onClick={[Function]}
              >
                Stop sharing
              </button>,
            ],
            "className": "buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hide",
                "className": "hide-button",
                "href": "#",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Hide",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Stop sharing",
                "className": "stop-sharing-button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Stop sharing",
              "type": "button",
            },
          ],
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
