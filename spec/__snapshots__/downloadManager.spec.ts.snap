// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`download manager should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DownloadManager />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="download-bar"
        id="download-manager-footer"
      >
        <ul
          id="download-main"
        />
        <span
          className="close-download-bar tempo-icon tempo-icon--close"
          id="close-download-bar"
          onClick={[Function]}
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ul
            id="download-main"
          />,
          <span
            className="close-download-bar tempo-icon tempo-icon--close"
            id="close-download-bar"
            onClick={[Function]}
          />,
        ],
        "className": "download-bar",
        "id": "download-manager-footer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "id": "download-main",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ul",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "close-download-bar tempo-icon tempo-icon--close",
            "id": "close-download-bar",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="download-bar"
          id="download-manager-footer"
        >
          <ul
            id="download-main"
          />
          <span
            className="close-download-bar tempo-icon tempo-icon--close"
            id="close-download-bar"
            onClick={[Function]}
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <ul
              id="download-main"
            />,
            <span
              className="close-download-bar tempo-icon tempo-icon--close"
              id="close-download-bar"
              onClick={[Function]}
            />,
          ],
          "className": "download-bar",
          "id": "download-manager-footer",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "id": "download-main",
            },
            "ref": null,
            "rendered": Array [],
            "type": "ul",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "close-download-bar tempo-icon tempo-icon--close",
              "id": "close-download-bar",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
